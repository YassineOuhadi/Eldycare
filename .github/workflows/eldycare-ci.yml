name: eldycare backend CICD

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths: "backend/**"
  pull_request:
    branches: ["main"]
    paths: "backend/**"

# on:
#   push:
#     branches:
#       - main
#     paths: 
#       - backend/**

jobs:
  build-microservices:
    name: build-microservices
    runs-on: ubuntu-latest
    steps:
      - name: Github Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: build
        run: mvn -DskipTests clean install
        working-directory: ./backend

      - name: upload Artifacts for discovery-service
        uses: actions/upload-artifact@v4.0.0
        with:
          name: discovery-service
          path: ./backend/discovery-service
          
  push-to-dockerhub-discovery-service:
    name: push-to-dockerhub-discovery-service
    runs-on: ubuntu-latest
    needs: build-microservices
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: discovery-service
      - name: List contents of the folders
        run: ls -R
      - name: Build & push Docker image discovery-service
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: yassineouhadi/eldycare-discovery-service
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
  deploy-to-eks:
    name: Deploy to Amazon EKS
    runs-on: ubuntu-latest
    needs: push-to-dockerhub-discovery-service
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Deploy EKS Resources
        run: |
          terraform init
          terraform apply -auto-approve
      
      - name: Configure kubectl for EKS
        run: |
          aws eks --region us-east-1 update-kubeconfig --name eldycare-cluster

      - name: Deploy Services to EKS
        run: |
          kubectl apply -f backend/discovery-service/discovery-service-deployment.yaml
          kubectl apply -f backend/discovery-service/discovery-service-service.yaml
